<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <id>Wap</id>
    <version>1</version>
    <vqmver>2.4.1</vqmver>
    <author>Wang</author>

    <file name="catalog/controller/common/header.php">
		<operation>
			<search position="before"><![CDATA[return $this->load->view($this->config->get('config_template') . '/template/common/header.tpl', $data);]]></search>
			<add trim="true"><![CDATA[

            if(IS_MOBILE){
                return $this->load->view('wap/header.tpl', $data);
            }

			]]></add>
		</operation>

    </file>
	
	<file name="catalog/controller/common/footer.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/common/footer.tpl')) {]]></search>
			<add trim="true"><![CDATA[

            if(IS_MOBILE){
			$this->document->addStyle('catalog/view/theme/wap/css/loaders.css');
                return $this->load->view('wap/footer.tpl', $data);
            }

			]]></add>
		</operation>

    </file>
	

	
	<file name="catalog/controller/module/slideshow.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template')]]></search>
			<add trim="true"><![CDATA[

            if(IS_MOBILE){
                return $this->load->view('wap/slideshow.tpl', $data);
            }

			]]></add>
		</operation>

    </file>
	
	<file name="catalog/controller/module/butopbanner.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template')]]></search>
			<add trim="true"><![CDATA[

            if(IS_MOBILE){
                return $this->load->view('wap/butopbanner.tpl', $data);
            }

			]]></add>
		</operation>

    </file>
	
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="before"><![CDATA[public function index() {]]></search>
			<add trim="true"><![CDATA[
	public function getLastest(){
		$this->load->model('catalog/product');

		$this->load->model('tool/image');
		
		$start = $this->request->post['start'];
		
		$json = [
			'state' => 0
		];
		$products = array();

		$filter_data = array(
			'sort'  => 'p.date_added',
			'order' => 'DESC',
			'start' => $start,
			'limit' => 20
		);

		$results = $this->model_catalog_product->getProducts($filter_data);

		if ($results) {
			$width = $this->config->get('config_image_popup_width');
			$height = $this->config->get('config_image_popup_height');
			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $width, $height);
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $width, $height);
				}

				if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = $result['rating'];
				} else {
					$rating = false;
				}

				$products[] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get('config_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'rating'      => $rating,
					'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
				);
			}
			$json['state'] = 1;
			$json['products'] = $products;
		}
		
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
			]]></add>
		</operation>
	</file>
	

</modification>